#name: Docker Image CI
#
#on:
#  push:
#    branches: [ "master" ]
#env:
#  APPLICATION_ID: 1
#  MONITOR_ID: 1
#  KUBERNETES_NAME: test
#
#jobs:
#  build:
#    permissions: write-all
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v4
#      - name: Setup java
#        uses: actions/setup-java@v4
#        with:
#          java-version: '21'
#          distribution: 'temurin'
#      - name: build project
#        run: mvn clean install
#      - name: Build the Docker image
#        run: docker build . --file Dockerfile --tag tsa:$(date +%s)
#      - name: Log in to the Container registry
#        uses: docker/login-action@v3
#        with:
#          registry: ghcr.io
#          username: ${{ github.actor }}
#          password: ${{ secrets.GITHUB_TOKEN }}
#
#      - name: Extract metadata (tags, labels) for Docker
#        id: meta
#        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
#        with:
#          images: ghcr.io/${{ github.repository }}
#
#      - name: Build and push Docker images
#        uses: docker/build-push-action@v5
#        with:
#          context: .
#          push: true
#          tags: ${{ steps.meta.outputs.tags }}
#          labels: ${{ steps.meta.outputs.labels }}
#  disable-monitor:
#    uses: zgamelogic/data-otter-monitor-active/.github/workflows/action.yml@v1.0.2
#    needs: build
#    with:
#      applicationId: ${{ env.APPLICATION_ID }}
#      monitorId: ${{ env.MONITOR_ID }}
#      active: false
#  Kubernetes:
#    runs-on: PiServer
#    needs: disable-monitor
#    steps:
#      - name: Checkout Kubernetes Directory
#        uses: actions/checkout@v4
#        with:
#          sparse-checkout: 'kubernetes/'
#      - name: Apply Kubernetes Configuration
#        run: sudo kubectl apply -f kubernetes/
#      - name: Rolling update
#        run: sudo kubectl rollout restart deployment ${{ env.KUBERNETES_NAME }}
#      - name: Wait for readiness probe
#        run: sudo kubectl rollout status deployment ${{ env.KUBERNETES_NAME }} --timeout=600s
#  enable-monitor:
#    uses: zgamelogic/data-otter-monitor-active/.github/workflows/action.yml@v1.0.2
#    needs: [ build, disable-monitor, Kubernetes ]
#    if: always()
#    with:
#      applicationId: ${{ env.APPLICATION_ID }}
#      monitorId: ${{ env.MONITOR_ID }}
#      active: true
